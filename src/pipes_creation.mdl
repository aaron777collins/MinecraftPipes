namespace "pipes"

# ===== PIPE CREATION SYSTEM =====
function "create_pipe":
    # Create a pipe between two points
    tellraw @s [{"text":"[PIPES] Pipe creation started","color":"aqua"}]
    tellraw @s [{"text":"[PIPES] Right-click to set start point","color":"yellow"}]
    scoreboard players set @s pipes_creation_mode 1

function "set_pipe_start":
    # Set the start point for pipe creation
    execute store result score @s pipes_start_x run data get entity @s Pos[0]
    execute store result score @s pipes_start_y run data get entity @s Pos[1]
    execute store result score @s pipes_start_z run data get entity @s Pos[2]
    tellraw @s [{"text":"[PIPES] Start point set at ","color":"green"},{"text":"X: ","color":"aqua"},{"score":{"name":"@s","objective":"pipes_start_x"},"color":"white"},{"text":" Y: ","color":"aqua"},{"score":{"name":"@s","objective":"pipes_start_y"},"color":"white"},{"text":" Z: ","color":"aqua"},{"score":{"name":"@s","objective":"pipes_start_z"},"color":"white"}]
    tellraw @s [{"text":"[PIPES] Right-click to set end point","color":"yellow"}]
    scoreboard players set @s pipes_creation_mode 2

function "set_pipe_end":
    # Set the end point and create the pipe
    execute store result score @s pipes_end_x run data get entity @s Pos[0]
    execute store result score @s pipes_end_y run data get entity @s Pos[1]
    execute store result score @s pipes_end_z run data get entity @s Pos[2]
    tellraw @s [{"text":"[PIPES] End point set at ","color":"green"},{"text":"X: ","color":"aqua"},{"score":{"name":"@s","objective":"pipes_end_x"},"color":"white"},{"text":" Y: ","color":"aqua"},{"score":{"name":"@s","objective":"pipes_end_y"},"color":"white"},{"text":" Z: ","color":"aqua"},{"score":{"name":"@s","objective":"pipes_end_z"},"color":"white"}]
    function pipes:create_pipe_path
    scoreboard players set @s pipes_creation_mode 0

function "create_pipe_path":
    # Create the actual pipe path between start and end points
    tellraw @s [{"text":"[PIPES] Creating pipe path...","color":"aqua"}]
    # This would create the visual pipe path - for now just create a connection
    function pipes:create_pipe_connection

function "create_pipe_connection":
    # Create a connection between source and sink
    tellraw @s [{"text":"[PIPES] Pipe connection created!","color":"green"}]
    tellraw @s [{"text":"[PIPES] Place containers at both ends","color":"aqua"}]

# ===== PIPE MANAGEMENT =====
function "list_pipes":
    # List all active pipes
    execute store result score #sources pipes_tmp run execute if entity @e[type=marker,tag=pipes.source]
    execute store result score #sinks pipes_tmp run execute if entity @e[type=marker,tag=pipes.sink]
    tellraw @s [{"text":"[PIPES] Active pipes: ","color":"aqua"},{"score":{"name":"#sources","objective":"pipes_tmp"},"color":"green"},{"text":" sources, ","color":"aqua"},{"score":{"name":"#sinks","objective":"pipes_tmp"},"color":"green"},{"text":" sinks","color":"aqua"}]

function "remove_pipe":
    # Remove a specific pipe
    execute as @e[type=marker,tag=pipes.controller,distance=..3,limit=1] run kill @s
    tellraw @s [{"text":"[PIPES] Pipe removed","color":"red"}]

function "clear_all_pipes":
    # Remove all pipes
    kill @e[type=marker,tag=pipes.controller]
    kill @e[type=item_display,tag=pipes.token]
    tellraw @s [{"text":"[PIPES] All pipes cleared","color":"red"}]

# ===== PIPE STATUS =====
function "check_pipe_status":
    # Check the status of all pipes
    execute store result score #active_sources pipes_tmp run execute if entity @e[type=marker,tag=pipes.source]
    execute store result result score #active_sinks pipes_tmp run execute if entity @e[type=marker,tag=pipes.sink]
    execute store result score #active_tokens pipes_tmp run execute if entity @e[type=item_display,tag=pipes.token]
    
    tellraw @s [{"text":"=== PIPE SYSTEM STATUS ===","color":"gold"}]
    tellraw @s [{"text":"Active Sources: ","color":"aqua"},{"score":{"name":"#active_sources","objective":"pipes_tmp"},"color":"green"}]
    tellraw @s [{"text":"Active Sinks: ","color":"aqua"},{"score":{"name":"#active_sinks","objective":"pipes_tmp"},"color":"green"}]
    tellraw @s [{"text":"Active Tokens: ","color":"aqua"},{"score":{"name":"#active_tokens","objective":"pipes_tmp"},"color":"yellow"}]

# ===== PIPE CONFIGURATION =====
function "set_pipe_speed":
    # Set the speed of pipe tokens
    scoreboard players set #global pipes_token_speed 0.1
    tellraw @s [{"text":"[PIPES] Pipe speed set to 0.1 blocks/tick","color":"aqua"}]

function "set_pipe_distance":
    # Set the maximum distance for pipe connections
    scoreboard players set #global pipes_max_distance 500
    tellraw @s [{"text":"[PIPES] Max pipe distance set to 500 blocks","color":"aqua"}]

# ===== PIPE DEBUG =====
function "debug_pipes":
    # Debug information about pipes
    tellraw @s [{"text":"=== PIPE DEBUG INFO ===","color":"gold"}]
    execute as @e[type=marker,tag=pipes.source] run tellraw @s [{"text":"Source at: ","color":"aqua"},{"text":"~ ~ ~","color":"white"}]
    execute as @e[type=marker,tag=pipes.sink] run tellraw @s [{"text":"Sink at: ","color":"aqua"},{"text":"~ ~ ~","color":"white"}]
    execute as @e[type=item_display,tag=pipes.token] run tellraw @s [{"text":"Token at: ","color":"yellow"},{"text":"~ ~ ~","color":"white"}]

# ===== PIPE HELP =====
function "pipe_help":
    tellraw @s [{"text":"=== PIPE CREATION COMMANDS ===","color":"gold"}]
    tellraw @s [{"text":"/function pipes:create_source - Create a pipe source","color":"aqua"}]
    tellraw @s [{"text":"/function pipes:create_sink - Create a pipe sink","color":"aqua"}]
    tellraw @s [{"text":"/function pipes:list_pipes - List all pipes","color":"aqua"}]
    tellraw @s [{"text":"/function pipes:remove_pipe - Remove nearby pipe","color":"red"}]
    tellraw @s [{"text":"/function pipes:clear_all_pipes - Remove all pipes","color":"red"}]
    tellraw @s [{"text":"/function pipes:check_pipe_status - Check system status","color":"yellow"}]
    tellraw @s [{"text":"/function pipes:debug_pipes - Debug information","color":"yellow"}]
